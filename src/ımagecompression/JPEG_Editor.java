package ımagecompression;

import java.awt.*;
import java.io.*;
import java.io.ByteArrayOutputStream;
import javax.swing.*;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.Date;
import java.lang.*;


public class JPEG_Editor extends ImageCompression {
    
    private static File inputFile;
    private final JFileChooser openFileChooser;
    
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    public JPEG_Editor() {
        initComponents();
        show_user();
        
        openFileChooser= new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("RGB Images","rgb" ));
        
    }
public ArrayList <User> userList() {
    ArrayList <User> usersList=new ArrayList<>();
    try {  //192.168.0.106
       Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
    //   String url ="jdbc:sqlserver://192.168.0.106:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       String url ="jdbc:sqlserver://DESKTOP-C50FCU3\\SQLEXPRESS:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       Connection con = DriverManager.getConnection(url);       
       String query1 = "SELECT * FROM users_images";
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(query1);
       User user;
       while(rs.next()){
           user = new User(rs.getInt("sno"), rs.getString("name"), rs.getBytes("images"), rs.getDate("date"));
           usersList.add(user);
       }
    } catch (Exception e) {
    }
return usersList;}

public void show_user(){
    ArrayList<User> list = userList();
    DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
    Object [] row= new Object[3];
    for (int i = 0; i < list.size(); i++) {
        row[0] = list.get(i).getSno();
        row[1] = list.get(i).getName();
        row[2] = list.get(i).getDate();
        model.addRow(row);
    }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        sidepane = new javax.swing.JPanel();
        jJpegComp = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jJpegvs2k = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComingSoon = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jComingSoon1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbl_image = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Display_User = new javax.swing.JTable();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setUndecorated(true);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        bg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bgFocusLost(evt);
            }
        });
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidepane.setBackground(new java.awt.Color(0, 102, 102));
        sidepane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jJpegComp.setBackground(new java.awt.Color(0, 153, 153));
        jJpegComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jJpegCompMousePressed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ımagecompression/images/icons8_jpg_48px.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("JPEG Compression");

        javax.swing.GroupLayout jJpegCompLayout = new javax.swing.GroupLayout(jJpegComp);
        jJpegComp.setLayout(jJpegCompLayout);
        jJpegCompLayout.setHorizontalGroup(
            jJpegCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jJpegCompLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(126, 126, 126))
        );
        jJpegCompLayout.setVerticalGroup(
            jJpegCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        sidepane.add(jJpegComp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 350, 60));

        jJpegvs2k.setBackground(new java.awt.Color(0, 153, 153));
        jJpegvs2k.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jJpegvs2kMousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ımagecompression/images/icons8_jpg_48px.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("JPEG VS JPEG2000 (ALFA)");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ımagecompression/images/icons8_j2k_40px.png"))); // NOI18N

        javax.swing.GroupLayout jJpegvs2kLayout = new javax.swing.GroupLayout(jJpegvs2k);
        jJpegvs2k.setLayout(jJpegvs2kLayout);
        jJpegvs2kLayout.setHorizontalGroup(
            jJpegvs2kLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jJpegvs2kLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jJpegvs2kLayout.setVerticalGroup(
            jJpegvs2kLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jJpegvs2kLayout.createSequentialGroup()
                .addGroup(jJpegvs2kLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jJpegvs2kLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jJpegvs2kLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jJpegvs2kLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(46, 46, 46))
        );

        sidepane.add(jJpegvs2k, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 350, 70));

        jComingSoon.setBackground(new java.awt.Color(0, 153, 153));
        jComingSoon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComingSoonMousePressed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ımagecompression/images/icons8_j2k_40px.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("JPEG 2000 Compression");

        javax.swing.GroupLayout jComingSoonLayout = new javax.swing.GroupLayout(jComingSoon);
        jComingSoon.setLayout(jComingSoonLayout);
        jComingSoonLayout.setHorizontalGroup(
            jComingSoonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jComingSoonLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addGap(34, 34, 34)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(143, 143, 143))
        );
        jComingSoonLayout.setVerticalGroup(
            jComingSoonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        sidepane.add(jComingSoon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 350, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Image Compressor");
        sidepane.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, 40));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 5));
        sidepane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 290, 10));

        jComingSoon1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ımagecompression/images/icons8_paint_48px.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Coming Soon");

        javax.swing.GroupLayout jComingSoon1Layout = new javax.swing.GroupLayout(jComingSoon1);
        jComingSoon1.setLayout(jComingSoon1Layout);
        jComingSoon1Layout.setHorizontalGroup(
            jComingSoon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jComingSoon1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel9)
                .addGap(31, 31, 31)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(126, 126, 126))
        );
        jComingSoon1Layout.setVerticalGroup(
            jComingSoon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        sidepane.add(jComingSoon1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 306, 350, 60));

        saveBtn.setBackground(new java.awt.Color(255, 255, 255));
        saveBtn.setForeground(new java.awt.Color(0, 0, 0));
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        sidepane.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, -1));

        deleteBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteBtn.setForeground(new java.awt.Color(0, 0, 0));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        sidepane.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 460, -1, -1));

        bg.add(sidepane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 650));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        lbl_image.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(lbl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lbl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        bg.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 710, 220));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("X");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });
        bg.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, -10, -1, 40));

        jTable_Display_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Name", "Date"
            }
        ));
        jTable_Display_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_Display_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Display_User);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 710, 250));

        jProgressBar1.setStringPainted(true);
        bg.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 500, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("-");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel12MousePressed(evt);
            }
        });
        bg.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 0, 20, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 558, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel11MousePressed

    private void bgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bgFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bgFocusLost
    private byte [] users_image;
    private void jJpegCompMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jJpegCompMousePressed
        // TODO add your handling code here:
        setColor(jJpegComp);
        resetColor(jJpegvs2k);
        resetColor(jComingSoon);
        op=1;
        input();
        
       Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                
                for (int i = 0; i < 101; i++) {
                    try {
                        jProgressBar1.setValue(i);
                        Thread.sleep(50);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JPEG_Editor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        t.start();
        comp();
        lbl_image.setIcon(new ImageIcon(output.toString()));
        filename = output.getAbsolutePath();
        ImageIcon icon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_image.getWidth(), lbl_image.getHeight(), Image.SCALE_SMOOTH));
        lbl_image.setIcon(icon);
        try {
            File image =new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte [] buf = new byte [1024];
            for(int readNum;(readNum = fis.read(buf)) !=-1;){
                bos.write(buf,0,readNum);
            }
            users_image=bos.toByteArray();
        } catch (Exception e) {
        }
                 
    }//GEN-LAST:event_jJpegCompMousePressed

    private static int WIDTH = 512;
    private static int HEIGHT = 512;
    private static int MAX_PIXEL_VAL = 255;
    private static int BLOCK_SIZE = 8;
    private static float ONE_BY_4 = (float) 1 / 4;
    private static int BASE_COEFFICINT = 4096;
    
    public void  showRecoveredImage_Tranformation(int iteration){
         for (int row = 0; row < HEIGHT; row++) {
            for (int column = 0; column < WIDTH; column++) {

                int pixValue = 0xff000000 | ((redChannelMat_IDCT[row][column] & 0xff) << 16) | ((greenChannelMat_IDCT[row][column] & 0xff) << 8) | (blueChannelMat_IDCT[row][column] & 0xff);
                DCTImage.setRGB(column, row, pixValue);

                pixValue = 0xff000000 | (((int) redChannelMat_IDWT[row][column] & 0xff) << 16) | (((int) greenChannelMat_IDWT[row][column] & 0xff) << 8) | ((int) blueChannelMat_IDWT[row][column] & 0xff);
                DWTImage.setRGB(column, row, pixValue);
            }
        }
    
        imageFrame.getContentPane().setLayout(gridBagLayout);
        
        DCTLabelText.setText(iteration != 0 ? "DCT Image (Iteration : " + iteration + "/64)" : "DCT Image");
        DCTLabelText.setHorizontalAlignment(SwingConstants.CENTER);
        DWTLabelText.setText(iteration != 0 ? "DWT Image (Iteration : " + iteration + "/64)" : "DWT Image ");
        DWTLabelText.setHorizontalAlignment(SwingConstants.CENTER);
        DCTLabel.setIcon(new ImageIcon(DCTImage));
        DWTLable.setIcon(new ImageIcon(DWTImage));
      
        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.CENTER;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        imageFrame.getContentPane().add(DCTLabelText, gridBagConstraints);

        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.CENTER;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        imageFrame.getContentPane().add(DWTLabelText, gridBagConstraints);

        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        imageFrame.getContentPane().add(DCTLabel, gridBagConstraints);

        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        imageFrame.getContentPane().add(DWTLable, gridBagConstraints);
        
        
        imageFrame.pack();
        imageFrame.setVisible(true);}
    
    private void jJpegvs2kMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jJpegvs2kMousePressed
        InputStream inputStream = null;      
            // TODO add your handling code here:
            setColor(jJpegvs2k);
            resetColor(jJpegComp);
            resetColor(jComingSoon);
   
     ImageCompression test = new ImageCompression();
     //comp_jpg2();
   
        showRecoveredImage_Tranformation(iteration);
                       
    }//GEN-LAST:event_jJpegvs2kMousePressed

    private void jComingSoonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComingSoonMousePressed
        // TODO add your handling code here:
        setColor(jComingSoon);
        resetColor(jJpegvs2k);
        resetColor(jJpegComp);
        op=2;
 
        input();
        
       Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                
                for (int i = 0; i < 101; i++) {
                    try {
                        jProgressBar1.setValue(i);
                        Thread.sleep(50);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(JPEG_Editor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        t.start();
        comp();
        lbl_image.setIcon(new ImageIcon(output.toString()));
        filename = output.getAbsolutePath();
        ImageIcon icon = new ImageIcon(new ImageIcon(filename).getImage().getScaledInstance(lbl_image.getWidth(), lbl_image.getHeight(), Image.SCALE_SMOOTH));
        lbl_image.setIcon(icon);
        try {
            File image =new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte [] buf = new byte [1024];
            for(int readNum;(readNum = fis.read(buf)) !=-1;){
                bos.write(buf,0,readNum);
            }
            users_image=bos.toByteArray();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jComingSoonMousePressed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
      //  String  sql="Select * from table1 where name=? and date=?";
//        string cs = ConifgurationManager.ConnectionStrings["conString"].ConnectionString;       
        try {
            //localhost  
       Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
       //String url ="jdbc:sqlserver://192.168.0.106:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       String url ="jdbc:sqlserver://DESKTOP-C50FCU3\\SQLEXPRESS:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       Connection con = DriverManager.getConnection(url); 
       String query = "insert into users_images(name,images,date)values(?,?,?)";
       PreparedStatement pst = con.prepareStatement(query);
       pst.setString(1, outputName);
       pst.setBytes(2, users_image);
       Date date = new Date();
       java.sql.Date sqldate = new java.sql.Date(date.getTime());
       SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
       Date dateCurrent = Calendar.getInstance().getTime();

       pst.setDate(3, sqldate);
       pst.executeUpdate();
       DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
       model.setRowCount(0);
       show_user();
       JOptionPane.showMessageDialog(null, "Inserted Sucessfully!");
       
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Inserted Failed!");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void jTable_Display_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_Display_UserMouseClicked
        // TODO add your handling code here:
        int i=jTable_Display_User.getSelectedRow();
        TableModel model = jTable_Display_User.getModel();
        byte [] img = (userList().get(i).getImage());
        ImageIcon icon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(lbl_image.getWidth(), lbl_image.getHeight(), Image.SCALE_SMOOTH));
        lbl_image.setIcon(icon);
        //users_image = img;
    }//GEN-LAST:event_jTable_Display_UserMouseClicked

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to delete ?", "Delete", JOptionPane.YES_NO_OPTION);
        if(opt == 0){  
        try {
       Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
       //String url ="jdbc:sqlserver://192.168.0.106:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       String url ="jdbc:sqlserver://DESKTOP-C50FCU3\\SQLEXPRESS:51994;databaseName=image_compression;user=DundasBIUser;password=852456ebo;integratedSecurity=False";
       Connection con = DriverManager.getConnection(url); 
       int row = jTable_Display_User.getSelectedRow();
       String value = (jTable_Display_User.getModel().getValueAt(row, 0).toString());
       String query = "DELETE FROM users_images where sno="+value;
       PreparedStatement pst = con.prepareStatement(query);
       pst.executeUpdate();
       DefaultTableModel model = (DefaultTableModel)jTable_Display_User.getModel();
       model.setRowCount(0);
       show_user();
       JOptionPane.showMessageDialog(null, "Deleted Sucessfully!");
        } catch (Exception e) {
        }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jLabel12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MousePressed
        // TODO add your handling code here:
        setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLabel12MousePressed
void setColor(JPanel panel){
    panel.setBackground(new Color(0,204,204));
}
void resetColor(JPanel panel){
    panel.setBackground(new Color(0,153,153));
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPEG_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPEG_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPEG_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPEG_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JPEG_Editor().setVisible(true);
            }
        });
       
    }
    private javax.swing.JLabel messageLabel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel jComingSoon;
    private javax.swing.JPanel jComingSoon1;
    private javax.swing.JPanel jJpegComp;
    private javax.swing.JPanel jJpegvs2k;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_Display_User;
    private javax.swing.JLabel lbl_image;
    private javax.swing.JButton saveBtn;
    private javax.swing.JPanel sidepane;
    // End of variables declaration//GEN-END:variables
byte [] photo= null;
String filename = null;
}

class User{

private int sno;
private String name2;
private byte [] picture;
private Date date;

public User(int sno, String name2, byte [] image,Date date){
    this.sno=sno;
    this.name2=name2;
    this.picture=image;
    this.date=date;
    }
    public int getSno(){
        return sno;
    }
    public String getName(){
        return name2;
    }
    public byte [] getImage(){
        return picture;
    }
    public Date getDate(){
        return date;
    }
}